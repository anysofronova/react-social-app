{"version":3,"file":"static/js/220.0c273c87.chunk.js","mappings":"8OAOMA,EAAY,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAClD,GAA+CC,EAAAA,EAAAA,MAAvCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,WAOhC,OACE,kBAAMC,UAAU,cAAcC,SAAUH,GAP3B,SAACI,GACdV,EAASU,GACTH,EAAW,YACXA,EAAW,cAIX,WACE,gBAAKC,UAAU,mBAAf,UACE,uCAEE,0BACEG,YAAY,QACZC,UAAU,EACVC,KAAK,QACLC,aAAa,MACTT,EAAS,iBAInB,gBAAKG,UAAU,uBAAf,UACE,0CAEE,0BACEI,UAAU,EACVC,KAAK,WACLF,YAAY,WACZG,aAAa,MACTT,EAAS,oBAInB,iBAAKG,UAAU,uBAAf,WACE,0BAAOK,KAAK,YAAeR,EAAS,gBADtC,iBAICF,GACC,iBAAKK,UAAU,sBAAf,WACE,gBAAKO,IAAKZ,EAASa,IAAI,aACvB,0BAAOH,KAAK,QAAWR,EAAS,gBAEhC,MACJ,gBAAKG,UAAU,oBAAf,SAAoCP,EAAe,GAAKC,KACxD,uCACA,2DACA,mDA8BN,GAAee,EAAAA,EAAAA,KARS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,YAAYD,OAC1BjB,MAAOgB,EAAME,YAAYlB,MACzBD,aAAciB,EAAME,YAAYnB,aAChCE,QAASe,EAAME,YAAYjB,WAGS,CAAEH,SAAAA,EAAAA,GAAUqB,WAAAA,EAAAA,IAApD,EAzBc,SAAC,GAAwD,IAAtDrB,EAAqD,EAArDA,SAAUmB,EAA2C,EAA3CA,OAAQlB,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACtD,OAAIgB,GAAe,SAAC,KAAD,CAAUG,SAAO,EAACC,GAAG,OAEtC,gBAAKf,UAAU,QAAf,UACE,iBAAKA,UAAU,iBAAf,WACE,mCACA,SAACT,EAAD,CACEC,SAAUA,EACVC,aAAcA,EACdC,MAAOA,EACPC,QAASA","sources":["components/Login/Login.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./login.scss\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { getCaptcha, getLogIn } from \"../../redux/authReducer\";\nimport { Navigate } from \"react-router-dom\";\n\nconst LoginForm = ({ getLogIn, loginSuccess, error, captcha }) => {\n  const { register, handleSubmit, resetField } = useForm();\n  let onSubmit = (data) => {\n    getLogIn(data);\n    resetField(\"password\");\n    resetField(\"captcha\");\n  };\n\n  return (\n    <form className=\"login__form\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"login__form_text\">\n        <label>\n          Email:\n          <input\n            placeholder=\"Email\"\n            required={true}\n            type=\"email\"\n            autoComplete=\"on\"\n            {...register(\"email\")}\n          />\n        </label>\n      </div>\n      <div className=\"login__form_password\">\n        <label>\n          Password:\n          <input\n            required={true}\n            type=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n            {...register(\"password\")}\n          />\n        </label>\n      </div>\n      <div className=\"login__form_checkbox\">\n        <input type=\"checkbox\" {...register(\"rememberMe\")} />\n        remember me\n      </div>\n      {captcha ? (\n        <div className=\"login__form_captcha\">\n          <img src={captcha} alt=\"captcha\" />\n          <input type=\"text\" {...register(\"captcha\")} />\n        </div>\n      ) : null}\n      <div className=\"login__form_error\">{loginSuccess ? \"\" : error}</div>\n      <button>LOGIN</button>\n      <p>Test email: free@samuraijs.com</p>\n      <p>Test password: free</p>\n    </form>\n  );\n};\n\nconst Login = ({ getLogIn, isAuth, loginSuccess, error, captcha }) => {\n  if (isAuth) return <Navigate replace to=\"/\" />;\n  return (\n    <div className=\"login\">\n      <div className=\"login__wrapper\">\n        <h1>Login</h1>\n        <LoginForm\n          getLogIn={getLogIn}\n          loginSuccess={loginSuccess}\n          error={error}\n          captcha={captcha}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.authReducer.isAuth,\n    error: state.authReducer.error,\n    loginSuccess: state.authReducer.loginSuccess,\n    captcha: state.authReducer.captcha,\n  };\n};\nexport default connect(mapStateToProps, { getLogIn, getCaptcha })(Login);\n"],"names":["LoginForm","getLogIn","loginSuccess","error","captcha","useForm","register","handleSubmit","resetField","className","onSubmit","data","placeholder","required","type","autoComplete","src","alt","connect","state","isAuth","authReducer","getCaptcha","replace","to"],"sourceRoot":""}