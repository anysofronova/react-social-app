{"version":3,"file":"static/js/220.02736ff4.chunk.js","mappings":"8OAOMA,EAAY,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC3C,GAA+CC,EAAAA,EAAAA,MAAvCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,WAMhC,OACE,kBAAMC,UAAU,cAAcC,SAAUH,GAN3B,SAACI,GACdT,EAASS,GACTH,EAAW,eAIX,WACE,gBAAKC,UAAU,mBAAf,UACE,uCAEE,0BACEG,YAAY,QACZC,UAAU,EACVC,KAAK,QACLC,aAAa,MACTT,EAAS,iBAInB,gBAAKG,UAAU,uBAAf,UACE,0CAEE,0BACEI,UAAU,EACVC,KAAK,WACLF,YAAY,WACZG,aAAa,MACTT,EAAS,oBAInB,iBAAKG,UAAU,uBAAf,WACE,0BAAOK,KAAK,YAAeR,EAAS,gBADtC,kBAIA,gBAAKG,UAAU,oBAAf,SAAoCN,EAAe,GAAKC,KACxD,uCACA,2DACA,mDA4BN,GAAeY,EAAAA,EAAAA,KAPS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,YAAYD,OAC1Bd,MAAOa,EAAME,YAAYf,MACzBD,aAAcc,EAAME,YAAYhB,gBAGI,CAAED,SAAAA,EAAAA,IAA1C,EAvBc,SAAC,GAA+C,IAA7CA,EAA4C,EAA5CA,SAAUgB,EAAkC,EAAlCA,OAAQf,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC/C,OAAIc,GAAe,SAAC,KAAD,CAAUE,SAAO,EAACC,GAAG,OAEtC,gBAAKZ,UAAU,QAAf,UACE,iBAAKA,UAAU,iBAAf,WACE,mCACA,SAACR,EAAD,CACEC,SAAUA,EACVC,aAAcA,EACdC,MAAOA","sources":["components/Login/Login.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./login.scss\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { getLogIn } from \"../../redux/authReducer\";\nimport { Navigate } from \"react-router-dom\";\n\nconst LoginForm = ({ getLogIn, loginSuccess, error }) => {\n  const { register, handleSubmit, resetField } = useForm();\n  let onSubmit = (data) => {\n    getLogIn(data);\n    resetField(\"password\");\n  };\n\n  return (\n    <form className=\"login__form\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"login__form_text\">\n        <label>\n          Email:\n          <input\n            placeholder=\"Email\"\n            required={true}\n            type=\"email\"\n            autoComplete=\"on\"\n            {...register(\"email\")}\n          />\n        </label>\n      </div>\n      <div className=\"login__form_password\">\n        <label>\n          Password:\n          <input\n            required={true}\n            type=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n            {...register(\"password\")}\n          />\n        </label>\n      </div>\n      <div className=\"login__form_checkbox\">\n        <input type=\"checkbox\" {...register(\"rememberMe\")} />\n        remember me\n      </div>\n      <div className=\"login__form_error\">{loginSuccess ? \"\" : error}</div>\n      <button>LOGIN</button>\n      <p>Test email: free@samuraijs.com</p>\n      <p>Test password: free</p>\n    </form>\n  );\n};\n\nconst Login = ({ getLogIn, isAuth, loginSuccess, error }) => {\n  if (isAuth) return <Navigate replace to=\"/\" />;\n  return (\n    <div className=\"login\">\n      <div className=\"login__wrapper\">\n        <h1>Login</h1>\n        <LoginForm\n          getLogIn={getLogIn}\n          loginSuccess={loginSuccess}\n          error={error}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.authReducer.isAuth,\n    error: state.authReducer.error,\n    loginSuccess: state.authReducer.loginSuccess,\n  };\n};\nexport default connect(mapStateToProps, { getLogIn })(Login);\n"],"names":["LoginForm","getLogIn","loginSuccess","error","useForm","register","handleSubmit","resetField","className","onSubmit","data","placeholder","required","type","autoComplete","connect","state","isAuth","authReducer","replace","to"],"sourceRoot":""}