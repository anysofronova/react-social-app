{"version":3,"file":"static/js/992.50d8e76c.chunk.js","mappings":"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","sources":["components/profile/profileInfo/ProfileStatus.jsx","components/profile/profileInfo/ProfileInfo.jsx","components/profile/MyPosts/Post/Post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/MyPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatus = ({ updateUserStatus, status }) => {\n  let [editMode, setEditMode] = useState(false);\n  let [newStatus, setNewStatus] = useState(status);\n\n  useEffect(() => {\n    setNewStatus(status);\n  }, [status]);\n\n  const toggleEditMode = () => {\n    if (editMode) updateUserStatus(newStatus);\n    setEditMode(!editMode);\n  };\n  const onStatusChange = (e) => {\n    setNewStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div className=\"profileStatus\">\n      {editMode ? (\n        <input\n          value={newStatus}\n          type=\"text\"\n          className=\"profileStatus__input\"\n          onBlur={toggleEditMode}\n          autoFocus={true}\n          placeholder=\"Put your status\"\n          onChange={onStatusChange}\n        />\n      ) : (\n        <div className=\"profileStatus__status\" onDoubleClick={toggleEditMode}>\n          {status || \"The user has hidden the information\"}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","import React from \"react\";\nimport \"./profileInfo.scss\";\nimport defaultUserPhoto from \"../../../assets/img/defaultUserPhoto.png\";\nimport PreLoader from \"../../UI/PreLoader\";\nimport ProfileStatus from \"./ProfileStatus\";\n\nfunction ProfileInfo({ profile, status, updateUserStatus }) {\n  if (!profile) return <PreLoader />;\n  return (\n    <div className=\"profileInfo\">\n      <div className=\"profile__bgimg\"></div>\n      <div className=\"profile__desc\">\n        <div className=\"profile__img\">\n          <img\n            src={\n              profile.photos.large || profile.photos.small || defaultUserPhoto\n            }\n            alt=\"profile\"\n          />\n        </div>\n        <div className=\"profile__name\">{profile.fullName}</div>\n        <div className=\"profile__status\">\n          <ProfileStatus status={status} updateUserStatus={updateUserStatus} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport \"./post.scss\";\n\nfunction Post({\n  message,\n  likesCount,\n  getDeletePost,\n  likeTogglePost,\n  id,\n  isLiked,\n}) {\n  const onDeletePost = () => getDeletePost(id);\n  const onLikeTogglePost = () => likeTogglePost(id);\n  return (\n    <div className=\"post\">\n      <div className=\"post__message\">{message}</div>\n      <label className=\"post__likes\">\n        {likesCount}\n        <button onClick={onLikeTogglePost}>{isLiked ? \"‚ù§Ô∏è\" : \"üñ§\"}</button>\n      </label>\n      <button className=\"post__deleteButton\" onClick={onDeletePost}>\n        ‚ï≥\n      </button>\n    </div>\n  );\n}\n\nexport default Post;\n","import React, { useState } from \"react\";\nimport \"./MyPosts.scss\";\nimport Post from \"./Post/Post\";\n\nconst MyPosts = ({ getAddPost, getDeletePost, postsData, likeTogglePost }) => {\n  const onAddPost = () => {\n    getAddPost(newPost);\n    setNewPost(\"\");\n  };\n  const [newPost, setNewPost] = useState(\"\");\n  const onSetNewPost = (e) => setNewPost(e.currentTarget.value);\n  return (\n    <div className=\"myPosts\">\n      <div className=\"myPosts__wrapper\">\n        <div className=\"myPosts__add\">\n          <textarea\n            onChange={onSetNewPost}\n            className=\"myPosts__textarea\"\n            value={newPost}\n          />\n          <button onClick={onAddPost}>Add a new post</button>\n        </div>\n        <div className=\"myPosts__posts\">\n          {postsData.map((i) => (\n            <Post\n              message={i.post}\n              key={i.id}\n              id={i.id}\n              likesCount={i.likesCount}\n              isLiked={i.isLiked}\n              getDeletePost={getDeletePost}\n              likeTogglePost={likeTogglePost}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import {\n  getAddPost,\n  getDeletePost,\n  likeTogglePost,\n} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    postsData: state.profileReducer.postsData,\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, {\n  getAddPost,\n  getDeletePost,\n  likeTogglePost,\n})(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport \"./profile.scss\";\nimport ProfileInfo from \"./profileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nfunction Profile({ profile, status, updateUserStatus }) {\n  return (\n    <div className=\"profile\">\n      <div className=\"profile__wrapper\">\n        <ProfileInfo\n          profile={profile}\n          status={status}\n          updateUserStatus={updateUserStatus}\n        />\n        <MyPostsContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport \"./profile.scss\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getProfile,\n  getUserStatus,\n  updateUserStatus,\n} from \"../../redux/profileReducer\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n  return ComponentWithRouterProp;\n}\n\nclass ProfileContainer extends Component {\n  componentDidMount() {\n    let userId = this.props.router.params.userId || this.props.id;\n    this.props.getProfile(userId);\n    this.props.getUserStatus(userId);\n  }\n  render() {\n    return <Profile {...this.props} />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    profile: state.profileReducer.profile,\n    status: state.profileReducer.status,\n    id: state.authReducer.id,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, { getProfile, getUserStatus, updateUserStatus }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.authReducer.isAuth,\n  };\n};\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate replace to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n  return connect(mapStateToProps)(RedirectComponent);\n};\n"],"names":["updateUserStatus","status","useState","editMode","setEditMode","newStatus","setNewStatus","useEffect","toggleEditMode","className","value","type","onBlur","autoFocus","placeholder","onChange","e","currentTarget","onDoubleClick","profile","src","photos","large","small","defaultUserPhoto","alt","fullName","PreLoader","message","likesCount","getDeletePost","likeTogglePost","id","isLiked","onClick","getAddPost","postsData","newPost","setNewPost","map","i","post","connect","state","profileReducer","MyPosts","ProfileContainer","userId","this","props","router","params","getProfile","getUserStatus","Component","compose","authReducer","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToProps","isAuth","RedirectComponent","replace","to","React"],"sourceRoot":""}